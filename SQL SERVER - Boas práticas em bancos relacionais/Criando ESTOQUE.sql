USE COMERCIO;

CREATE TABLE LOJAS(
	CODIGO INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	IND_INATIVO INT NOT NULL DEFAULT 0
	CONSTRAINT LOJAS_PK PRIMARY KEY(CODIGO)
);

INSERT INTO LOJAS(CODIGO, NOME) VALUES(1000, 'Reload');
INSERT INTO LOJAS(CODIGO, NOME) VALUES(2000, 'NetStore');
INSERT INTO LOJAS(CODIGO, NOME) VALUES(3000, 'CodeInc');

SELECT * FROM LOJAS;

SELECT CODIGO, NOME FROM LOJAS WHERE IND_INATIVO = 0;

DROP TABLE ESTOQUE;

CREATE TABLE ESTOQUE(
	CODIGO_PRODUTO INT NOT NULL,
	CODIGO_FILIAL INT NOT NULL,
	QUANTIDADE DECIMAL NOT NULL DEFAULT 0, -- DECIMAL PQ PODE SER UM PRODUTO EM KG, UNITARIO, FRACINADO
	CONSTRAINT ESTOQUE_PK PRIMARY KEY(CODIGO_PRODUTO, CODIGO_FILIAL)
);

SELECT * FROM ESTOQUE;

-- Tipo de situação que não pode acontecer, pq não existe produto 99 e loja 10
INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(99, 10, 1);

SELECT * FROM PRODUTOS;

INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(1, 1000, 50);
INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(2, 1000, 75);
INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(2, 2000, 100);
INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(3, 3000, 100);
INSERT INTO ESTOQUE(CODIGO_PRODUTO, CODIGO_FILIAL, QUANTIDADE) VALUES(3, 1000, 25);

-- Com essa validação o code acima não funcionara mais
ALTER TABLE ESTOQUE ADD CONSTRAINT FK_ESTOQUE_PRODUTOS FOREIGN KEY(CODIGO_PRODUTO) REFERENCES PRODUTOS(CODIGO);

SELECT E.CODIGO_FILIAL, L.NOME FROM ESTOQUE E INNER JOIN LOJAS L ON E.CODIGO_FILIAL = L.CODIGO;

SELECT E.CODIGO_FILIAL, L.NOME, E.CODIGO_PRODUTO, P.DESCRICAO, E.QUANTIDADE
FROM ESTOQUE E INNER JOIN LOJAS L
ON E.CODIGO_FILIAL = L.CODIGO
INNER JOIN PRODUTOS P
ON E.CODIGO_PRODUTO = P.CODIGO;